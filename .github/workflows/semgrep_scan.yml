name: org-semgrep-parallel-scan

on:
  workflow_dispatch:
  schedule:
    - cron: "0 3 * * 0"  # Weekly

jobs:
  get-repos:
    runs-on: self-hosted
    outputs:
      repos: ${{ steps.get.outputs.repos }}
    steps:
      - name: Get repo list
        id: get
        env:
          GH_TOKEN: ${{ secrets.REPO_TOKEN }}
        run: |
          repos=$(curl -s -H "Authorization: token $GH_TOKEN" \
            "https://api.github.com/users/thineshsubramani/repos?per_page=100" \
            | jq -r '.[].full_name' | jq -R -s -c 'split("\n")[:-1]')
          echo "repos=$repos" >> $GITHUB_OUTPUT

  scan:
    needs: get-repos
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        repo: ${{ fromJson(needs.get-repos.outputs.repos) }}
    steps:
      - name: Shallow sparse checkout
        run: |
          rm -rf repo
          git clone --depth=1 --filter=blob:none https://github.com/${{ matrix.repo }} repo
          cd repo
          git sparse-checkout init --cone
          echo "src/" > .git/info/sparse-checkout
          git sparse-checkout set src/

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Semgrep
        run: |
          python -m pip install --upgrade pip
          pip install semgrep

      - name: Run Semgrep scan
        run: |
          safe_repo_name=$(echo "${{ matrix.repo }}" | tr '/' '_')
          cd repo
          semgrep --config auto --json > ../semgrep-results/$safe_repo_name.json || true

  upload-results:
    needs: scan
    runs-on: self-hosted
    steps:
      - name: Upload combined scan results
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-results
          path: semgrep-results/*.json

  aggregate:
    needs: upload-results
    runs-on: self-hosted
    steps:
      - name: Download all scan results
        uses: actions/download-artifact@v4
        with:
          name: semgrep-results
          path: scan_reports

      - name: Generate README.md
        run: |
          echo "# Semgrep Audit Report" > scan_reports/README.md
          echo "Generated on $(date -u)" >> scan_reports/README.md
          echo "" >> scan_reports/README.md
          for file in scan_reports/*.json; do
            repo=$(basename "$file" .json | tr '_' '/')
            count=$(jq '.results | length' "$file")
            echo "- **$repo** â†’ $count findings" >> scan_reports/README.md
          done

      - name: Commit and push report
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git fetch origin main
          git checkout main
          mkdir -p scan_reports
          cp -r scan_reports/* ./scan_reports/
          git add scan_reports
          git commit -m "Update Semgrep report [skip ci]" || echo "No changes"
          git push
